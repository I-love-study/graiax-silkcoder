name: Build & Publish

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} & ${{ matrix.cibw_python }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
         os: [ubuntu-latest, windows-latest, macos-latest]
         cibw_python: ["cp38-*", "cp39-*", "cp310-*", "cp311-*"]

    steps:
    - uses: actions/checkout@v3

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.12.0
      env:
        CIBW_BUILD_VERBOSITY: 1
        CIBW_BUILD: ${{ matrix.cibw_python }}

    - uses: actions/upload-artifact@v3
      with:
        path: ./wheelhouse/*.whl

  build_wheels_arch_windows:
    name: Build Windows arm64 wheels on ${{ matrix.cibw_python }}
    if: ${{ false }}
    runs-on: windows-latest
    strategy:
      fail-fast: true
      matrix:
         cibw_python: ["cp39-*", "cp310-*", "cp311-*", "cp312-*"]
    
    steps:
    - uses: actions/checkout@v3

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.16.2
      env:
        CIBW_BUILD_VERBOSITY: 1
        CIBW_ARCHS: ARM64
        CIBW_BUILD: ${{ matrix.cibw_python }}

    - uses: actions/upload-artifact@v3
      with:
        path: ./wheelhouse/*.whl


  build_wheels_arch:
    name: Build wheels on ${{ matrix.cibw_python }} ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
         cibw_python: ["cp38-", "cp39-", "cp310-", "cp311-"]
         arch: ["manylinux", "musllinux"]
    
    steps:
    - uses: actions/checkout@v3

    - name: Install Qemu
      uses: docker/setup-qemu-action@v2
      with:
        platforms: arm64

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.12.0
      env:
        CIBW_BUILD_VERBOSITY: 1
        CIBW_ARCHS: aarch64
        CIBW_BUILD: ${{ matrix.cibw_python }}${{ matrix.arch }}_aarch64

    - uses: actions/upload-artifact@v3
      with:
        path: ./wheelhouse/*.whl

  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install PDM
        uses: pdm-project/setup-pdm@main
      
      - name: Build SDist
        run: |
          pdm build --no-wheel

      - uses: actions/upload-artifact@v4
        with:
          path: dist/*.tar.gz
      
  upload_all:
    needs: [build_wheels, build_wheels_arch, make_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: artifact
          path: dist
      
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true
          verbose: true